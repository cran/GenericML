% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accessors.R
\name{get_CLAN}
\alias{get_CLAN}
\title{Accessor function for the CLAN generic target estimates}
\usage{
get_CLAN(x, variable, learner = "best", plot = TRUE)
}
\arguments{
\item{x}{An object of the class \code{\link{GenericML}}.}

\item{variable}{The (character) name of a variabe on which CLAN was performed.}

\item{learner}{A character string of the learner whose CLAN generic target estimates shall be accessed. Default is \code{"best"} for the best learner for CLAN}

\item{plot}{Logical. If \code{TRUE} (default), a plot is printed.}
}
\value{
A numeric matrix of CLAN generic target estimates which contains information on point estimates, confidence bounds, and (adjusted) p-values. Furthermore, prints a plot if \code{plot = TRUE}.
}
\description{
Accessor function for the CLAN generic target estimates
}
\examples{
if(require("glmnet") && require("ranger")){
## generate data
set.seed(1)
n  <- 200                                  # number of observations
p  <- 5                                    # number of covariates
D  <- rbinom(n, 1, 0.5)                    # random treatment assignment
Z  <- matrix(runif(n*p), n, p)             # design matrix
Y0 <- as.numeric(Z \%*\% rexp(p) + rnorm(n)) # potential outcome without treatment
Y1 <- 2 + Y0                               # potential outcome under treatment
Y  <- ifelse(D == 1, Y1, Y0)               # observed outcome

## column names of Z
colnames(Z) <- paste0("V", 1:p)

## specify learners
learners <- c("lasso", "mlr3::lrn('ranger', num.trees = 30)")

## perform generic ML inference
# small number of splits to keep computation time low
x <- GenericML(Z, D, Y, learners, num_splits = 10,
               parallel = FALSE)

## access BLP generic targets for best learner w/o plot
get_BLP(x, learner = "best", plot = FALSE)

## access BLP generic targets for ranger learner w/o plot
get_BLP(x, learner = "mlr3::lrn('ranger', num.trees = 30)", plot = FALSE)

## access GATES generic targets for best learner w/o plot
get_GATES(x, learner = "best", plot = FALSE)

## access GATES generic targets for ranger learner w/o plot
get_GATES(x, learner = "mlr3::lrn('ranger', num.trees = 30)", plot = FALSE)

## access CLAN generic targets for "V1" & best learner, w/o plot
get_CLAN(x, learner = "best", variable = "V1", plot = FALSE)

## access CLAN generic targets for "V1" & ranger learner, w/o plot
get_CLAN(x, learner = "mlr3::lrn('ranger', num.trees = 30)",
         variable = "V1", plot = FALSE)
}

}
\seealso{
\code{\link{GenericML}},
\code{\link{get_BLP}},
\code{\link{get_GATES}},
\code{\link[=plot.GenericML]{plot}}
}
